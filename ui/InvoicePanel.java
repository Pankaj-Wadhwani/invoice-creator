/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import constants.DatabaseTableNameConstants;
import database.CategoryTable;
import database.DatabaseManagement;
import database.ProductTable;
import invoice.Invoice;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Shailesh
 */
public class InvoicePanel extends javax.swing.JPanel {

    private String customerName;
    private String phoneno;
    private String email;
    private final String path = "C:\\Users\\Shailesh\\Documents\\invoices";
    private ArrayList<Object> productNames;
    private Map<String, Integer> productNameAndQty;
    private MainFrame mf = null;
    /**
     * Creates new form InvoicePanel
     */
    public InvoicePanel(MainFrame mf) {
        this.mf = mf;
        initComponents();
        updateTableData();
        updateChanges();
        updateProductData();
        productSidePanel.setVisible(false);
        btnPrevious.setVisible(false);
        btnCreateInvoice.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customerSidePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int x,int y){
                return false;
            }
        };
        jLabel1 = new javax.swing.JLabel();
        productSidePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblProductName = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        jcbProductName = new javax.swing.JComboBox<>();
        spnQuantity = new javax.swing.JSpinner();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        bottomPanel = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnCreateInvoice = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 250, 255));
        setPreferredSize(new java.awt.Dimension(1600, 963));
        setLayout(null);

        customerSidePanel.setBackground(new java.awt.Color(255, 250, 255));
        customerSidePanel.setInheritsPopupMenu(true);
        customerSidePanel.setName("customerSidePanel"); // NOI18N

        customerTable.setBackground(new java.awt.Color(2, 47, 64));
        customerTable.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        customerTable.setForeground(new java.awt.Color(255, 250, 255));
        customerTable.setFillsViewportHeight(true);
        customerTable.setGridColor(new java.awt.Color(15, 163, 177));
        customerTable.setRowHeight(30);
        customerTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);

        jLabel1.setFont(new java.awt.Font("Copse", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please select a customer for whom the invoice must be generated");

        javax.swing.GroupLayout customerSidePanelLayout = new javax.swing.GroupLayout(customerSidePanel);
        customerSidePanel.setLayout(customerSidePanelLayout);
        customerSidePanelLayout.setHorizontalGroup(
            customerSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerSidePanelLayout.createSequentialGroup()
                .addContainerGap(274, Short.MAX_VALUE)
                .addGroup(customerSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerSidePanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1031, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(275, 275, 275))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerSidePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(395, 395, 395))))
        );
        customerSidePanelLayout.setVerticalGroup(
            customerSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerSidePanelLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        add(customerSidePanel);
        customerSidePanel.setBounds(1, 0, 1580, 880);

        productSidePanel.setBackground(new java.awt.Color(255, 250, 255));
        productSidePanel.setName("productSidePanel"); // NOI18N
        productSidePanel.setPreferredSize(new java.awt.Dimension(1600, 963));

        jLabel2.setFont(new java.awt.Font("Copse", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Please select products that the customer has purchased");

        productTable.setBackground(new java.awt.Color(2, 47, 64));
        productTable.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        productTable.setForeground(new java.awt.Color(255, 255, 255));
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.setFillsViewportHeight(true);
        productTable.setGridColor(new java.awt.Color(15, 163, 177));
        productTable.setRowHeight(30);
        jScrollPane2.setViewportView(productTable);

        jPanel1.setBackground(new java.awt.Color(255, 250, 255));

        lblProductName.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        lblProductName.setText("Product Name : ");

        lblQuantity.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        lblQuantity.setText("Quantity : ");

        jcbProductName.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        jcbProductName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbProductNameItemStateChanged(evt);
            }
        });

        spnQuantity.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        spnQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        btnAdd.setBackground(new java.awt.Color(30, 27, 24));
        btnAdd.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(15, 163, 177));
        btnAdd.setText("Add");
        btnAdd.setContentAreaFilled(false);
        btnAdd.setOpaque(true);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(535, 535, 535)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblProductName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(lblQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(698, 698, 698)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        btnDelete.setBackground(new java.awt.Color(30, 27, 24));
        btnDelete.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(15, 163, 177));
        btnDelete.setText("Delete");
        btnDelete.setContentAreaFilled(false);
        btnDelete.setOpaque(true);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout productSidePanelLayout = new javax.swing.GroupLayout(productSidePanel);
        productSidePanel.setLayout(productSidePanelLayout);
        productSidePanelLayout.setHorizontalGroup(
            productSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productSidePanelLayout.createSequentialGroup()
                .addGroup(productSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productSidePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(productSidePanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(productSidePanelLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 298, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productSidePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(702, 702, 702))
        );
        productSidePanelLayout.setVerticalGroup(
            productSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productSidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(productSidePanel);
        productSidePanel.setBounds(0, 0, 1610, 880);

        bottomPanel.setBackground(new java.awt.Color(255, 250, 255));

        btnNext.setBackground(new java.awt.Color(30, 27, 24));
        btnNext.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        btnNext.setForeground(new java.awt.Color(15, 163, 177));
        btnNext.setText("Next >");
        btnNext.setActionCommand("Next");
        btnNext.setContentAreaFilled(false);
        btnNext.setOpaque(true);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(30, 27, 24));
        btnPrevious.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(15, 163, 177));
        btnPrevious.setText("< Previous");
        btnPrevious.setActionCommand("Previous");
        btnPrevious.setContentAreaFilled(false);
        btnPrevious.setOpaque(true);
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnCreateInvoice.setBackground(new java.awt.Color(30, 27, 24));
        btnCreateInvoice.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        btnCreateInvoice.setForeground(new java.awt.Color(15, 163, 177));
        btnCreateInvoice.setText("Create Invoice");
        btnCreateInvoice.setActionCommand("Next");
        btnCreateInvoice.setContentAreaFilled(false);
        btnCreateInvoice.setOpaque(true);
        btnCreateInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateInvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 773, Short.MAX_VALUE)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnCreateInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        add(bottomPanel);
        bottomPanel.setBounds(0, 880, 1600, 80);
    }// </editor-fold>//GEN-END:initComponents

    private int checkInTable(String s) {
        for (int i = 0; i < productTable.getRowCount(); i++) {
            if (s.equals((String) productTable.getValueAt(i, 0))) {
                return i;
            }
        }
        return -1;
    }

    private void addInTable() {
        String productName = (String) jcbProductName.getSelectedItem();
        int qty = (int) spnQuantity.getValue();
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int pos = checkInTable(productName);
        if (pos == -1) {
            Vector v = new Vector();
            v.add(productName);
            v.add(qty);
            String[] brandNameAndProductModel = productName.split(" ");
            v.add(ProductTable.getPrice("productid", ProductTable.getProductId(brandNameAndProductModel[0], brandNameAndProductModel[1]) + ""));
            model.addRow(v);
        } else {
            productTable.setValueAt((int) productTable.getValueAt(pos, 1) + qty, pos, 1);
        }
        changeQtyFromMap(productName, qty);
    }

    private void changeQtyFromMap(String key, int qty) {
        productNameAndQty.put(key, (productNameAndQty.get(key) - qty));
        updateProductData();
    }

    private boolean quantityExistForProduct() {
        String key = (String) jcbProductName.getSelectedItem();
        int qty = (int) spnQuantity.getValue();
        return !(productNameAndQty.get(key) < qty || qty <= 0);
    }

    private void updateChangesInDatabase() {
        for (int i = 0; i < productTable.getRowCount(); i++) {
            String[] brandNameAndProductmodel = ((String) productTable.getValueAt(i, 0)).split(" ");
            int qty = (int) productTable.getValueAt(i, 1);
            int pId = ProductTable.getProductId(brandNameAndProductmodel[0], brandNameAndProductmodel[1]);

            ProductTable.productSold(brandNameAndProductmodel[0], brandNameAndProductmodel[1], qty);

            CategoryTable.changeCategoryQuantity(ProductTable.getCategoryId(pId));
            CategoryTable.changeCategoryPrice(ProductTable.getCategoryId(pId));
        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (quantityExistForProduct()) {
            addInTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please Check quantity");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (customerTable.getSelectedRow() != -1) {
            btnPrevious.setVisible(true);
            productSidePanel.setVisible(true);
            btnNext.setVisible(false);
            customerSidePanel.setVisible(false);
            btnCreateInvoice.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Please re-check!");
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        int selectedRow = customerTable.getSelectedRow();
        if (selectedRow != -1) {
            customerName = (String) customerTable.getValueAt(selectedRow, 0);
            phoneno = (String) customerTable.getValueAt(selectedRow, 1);
            email = (String) customerTable.getValueAt(selectedRow, 2);
        }
    }//GEN-LAST:event_customerTableMouseClicked

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        btnPrevious.setVisible(false);
        btnNext.setVisible(true);
        btnCreateInvoice.setVisible(false);
        productSidePanel.setVisible(false);
        customerSidePanel.setVisible(true);
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void jcbProductNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbProductNameItemStateChanged
        updateProductData();
    }//GEN-LAST:event_jcbProductNameItemStateChanged

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = productTable.getSelectedRow();
        if (selectedRow != -1) {
            String productName = (String) productTable.getValueAt(selectedRow, 0);
            int qty = (int) productTable.getValueAt(selectedRow, 1);
            changeQtyFromMap(productName, -qty);
            DefaultTableModel model = (DefaultTableModel) productTable.getModel();
            model.removeRow(selectedRow);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCreateInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateInvoiceActionPerformed
        if (!isProductTableEmpty()) {
            Invoice invoice = new Invoice(path);
            btnNext.setVisible(false);
            btnPrevious.setVisible(false);
            btnCreateInvoice.setVisible(false);
            productSidePanel.setVisible(false);
            customerSidePanel.setVisible(false);
            JLabel jb = new JLabel(new ImageIcon("C:\\Users\\Shailesh\\Documents\\NetBeansProjects\\Login1\\src\\resources\\invoice.gif"));
            add(jb);
            jb.setSize(1600, 963);
            jb.setLocation(0, 0);
            t = new Timer(10000, (ae) -> {
                remove(jb);
                repaint();
                validate();
                t.stop();
                JOptionPane.showMessageDialog(null, "Your invoice has been generated, \nPlease check " + path);
                mf.showHome();
            });
            t.start();
            invoice.setCustomerDetails(customerName, phoneno, email);
            addProductsToInvoice(invoice);
            invoice.createInvoice();
            updateChangesInDatabase();
        }
    }//GEN-LAST:event_btnCreateInvoiceActionPerformed
    
    private void addProductsToInvoice(Invoice invoice) {
        for (int i = 0; i < productTable.getRowCount(); i++) {
            String[] brandNameAndProductmodel = ((String) productTable.getValueAt(i, 0)).split(" ");
            int qty = (int) productTable.getValueAt(i, 1);
            double price = (double) productTable.getValueAt(i, 2);
            invoice.addProduct(brandNameAndProductmodel[0], brandNameAndProductmodel[1], price, qty);
        }
    }

    private boolean isProductTableEmpty() {
        return productTable.getRowCount() == 0;
    }

    public void updateChanges() {
        productNames = new ArrayList<>();
        productNameAndQty = getProductNamesAndQty();
        for (String string : productNameAndQty.keySet()) {
            productNames.add(string);
        }
        jcbProductName.setModel(new DefaultComboBoxModel(productNames.toArray()));
        updateProductData();
    }

    private void updateProductData() {
        Object o = jcbProductName.getSelectedItem();
        if(o!=null){
            int quantity = productNameAndQty.get(o);
            if(quantity > 0)
                spnQuantity.setModel(new SpinnerNumberModel(0, 0, quantity, 1));
        }
        else{
            JOptionPane.showMessageDialog(null, "Please add products first!");
            mf.showHome();
        }
    }

    private Map<String, Integer> getProductNamesAndQty() {
        Map<String, Integer> productNameAndQty = new HashMap<>();
        try {
            ResultSet rs = DatabaseManagement.select("product", null, "brandname", "productmodel", "quantity");
            while (rs.next()) {
                productNameAndQty.put(rs.getString("brandname") + " " + rs.getString("productmodel"), rs.getInt("quantity"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception in getBrans " + e);
        }
        return productNameAndQty;
    }

//    public void start(){
//        sp = new SlidePanel(customerSidePanel,SlidePanel.SLIDE_RIGHT);
//        sp.startSliding(2, new Point(-1600,0), new Point(0,0),20);
//    }
    private void updateTableData() {
        ResultSet rs = null;
        try {
            rs = DatabaseManagement.select(DatabaseTableNameConstants.CUSTOMERTABLE, null, "customername", "phoneno", "email");
            customerTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue :  " + e);
        } finally {
            try {
                rs.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Problem in closing rs or preparedStatement :  " + e);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCreateInvoice;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JPanel customerSidePanel;
    private javax.swing.JTable customerTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcbProductName;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JPanel productSidePanel;
    private javax.swing.JTable productTable;
    private javax.swing.JSpinner spnQuantity;
    // End of variables declaration//GEN-END:variables
    private Timer t = null;
    private int entry = 0;

}
