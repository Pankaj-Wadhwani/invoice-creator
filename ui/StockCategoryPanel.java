/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import constants.DatabaseColumnNameConstants;
import constants.MyColorConstants;
import static constants.MyColorConstants.MYBLUE;
import database.CategoryTable;
import database.DatabaseManagement;
import database.ProductTable;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.sql.ResultSet;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import jiconfont.icons.FontAwesome;
import jiconfont.swing.IconFontSwing;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author jains
 */
public class StockCategoryPanel extends javax.swing.JPanel {

    /**
     * Creates new form StockCategoryPanel
     */
    public StockCategoryPanel() {
        initComponents();
        jtbData.setFillsViewportHeight(true);
        updateTableData(SQL);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
//        IconFontSwing.register(FontAwesome.getIconFont());
        initIcons();
    }
    private void initIcons(){
        Icon icon;
        icon = IconFontSwing.buildIcon(FontAwesome.PLUS_CIRCLE, 30, MyColorConstants.MYWHITE);
        btnAdd.setIcon(icon);
        icon = IconFontSwing.buildIcon(FontAwesome.MINUS_CIRCLE, 30, MyColorConstants.MYWHITE);
        btnDelete.setIcon(icon);
        icon = IconFontSwing.buildIcon(FontAwesome.EXCLAMATION_CIRCLE, 30, MyColorConstants.MYWHITE);
        btnUpdate.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel(){
            //    @Override
            //    public void paintComponent(Graphics g){
                //        //        super.paintComponent(g);
                //        Graphics2D g2 = (Graphics2D)g;
                //        //        g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                //        g2.setPaint(new GradientPaint(0f,0f,new Color(2,47,64),25f,35f,MYBLUE,true));
                //        g2.fillRect(0, 0, getWidth(), getHeight());
                //        //        ui.update(g, this);
                //        ui.paint(g, this);
                //    }
        };
        jlblCategoryName = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCategoryName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbData = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int r,int c){
                return false;
            }
            //    @Override
            //    public void paintComponent(Graphics g){
                //        //        super.paintComponent(g);
                //        Graphics2D g2 = (Graphics2D)g;
                //        //        g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                //        g2.setPaint(new GradientPaint(0f,0f,new Color(2,47,64),25f,35f,MYBLUE,true));
                //        g2.fillRect(0, 0, getWidth(), getHeight());
                //        //        ui.update(g, this);
                //        ui.paint(g, this);
                //    }
        };
        operationPanel = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 250, 255));
        setLayout(new java.awt.BorderLayout());

        mainPanel.setBackground(new java.awt.Color(255, 250, 255));

        jlblCategoryName.setBackground(new java.awt.Color(255, 250, 255));

        jLabel1.setFont(new java.awt.Font("Copse", 1, 24)); // NOI18N
        jLabel1.setText("Category Name : ");

        txtCategoryName.setFont(new java.awt.Font("Copse", 1, 24)); // NOI18N
        txtCategoryName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(15, 163, 177)));
        txtCategoryName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCategoryNameFocusGained(evt);
            }
        });
        txtCategoryName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCategoryNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jlblCategoryNameLayout = new javax.swing.GroupLayout(jlblCategoryName);
        jlblCategoryName.setLayout(jlblCategoryNameLayout);
        jlblCategoryNameLayout.setHorizontalGroup(
            jlblCategoryNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlblCategoryNameLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(txtCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jlblCategoryNameLayout.setVerticalGroup(
            jlblCategoryNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtCategoryName, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 250, 255));
        jScrollPane1.setBorder(null);

        jtbData.setBackground(new java.awt.Color(2, 47, 64));
        jtbData.setFont(new java.awt.Font("Copse", 1, 18)); // NOI18N
        jtbData.setForeground(new java.awt.Color(255, 250, 255));
        jtbData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbData.setGridColor(new java.awt.Color(15, 163, 177));
        jtbData.setRowHeight(40);
        jtbData.setSelectionBackground(new java.awt.Color(62, 146, 204));
        jtbData.setSelectionForeground(new java.awt.Color(255, 250, 255));
        jtbData.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbData.getTableHeader().setResizingAllowed(false);
        jtbData.getTableHeader().setReorderingAllowed(false);
        jtbData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbData);

        operationPanel.setBackground(new java.awt.Color(255, 250, 255));

        btnUpdate.setBackground(new java.awt.Color(30, 27, 24));
        btnUpdate.setFont(new java.awt.Font("Copse", 1, 24)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(15, 163, 177));
        btnUpdate.setText("Update");
        btnUpdate.setBorder(null);
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.setFocusPainted(false);
        btnUpdate.setOpaque(true);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(30, 27, 24));
        btnDelete.setFont(new java.awt.Font("Copse", 1, 24)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(15, 163, 177));
        btnDelete.setText("Delete");
        btnDelete.setBorder(null);
        btnDelete.setContentAreaFilled(false);
        btnDelete.setFocusPainted(false);
        btnDelete.setOpaque(true);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(30, 27, 24));
        btnAdd.setFont(new java.awt.Font("Copse", 1, 24)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(15, 163, 177));
        btnAdd.setText("Add");
        btnAdd.setBorder(null);
        btnAdd.setContentAreaFilled(false);
        btnAdd.setOpaque(true);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operationPanelLayout = new javax.swing.GroupLayout(operationPanel);
        operationPanel.setLayout(operationPanelLayout);
        operationPanelLayout.setHorizontalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        operationPanelLayout.setVerticalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(365, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addComponent(jlblCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(273, 273, 273)))
                        .addGap(315, 315, 315))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(operationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(389, 389, 389))))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jlblCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addGap(95, 95, 95)
                .addComponent(operationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
        );

        add(mainPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        txt = JOptionPane.showInputDialog("Enter new name : ");
        if("".equals(txt)){
            JOptionPane.showMessageDialog(null, "Updation cannot be empty!");
        }
        else if(txt!=null){
            txt = txt.trim();
            int selectedRow = jtbData.getSelectedRow();
            String categoryName = jtbData.getModel().getValueAt(selectedRow, 0).toString();
            int id = 0;
            id = CategoryTable.getCategoryId(DatabaseColumnNameConstants.CATEGORYNAME, categoryName);
            CategoryTable.update(DatabaseColumnNameConstants.CATEGORYNAME, txt, id);
            JOptionPane.showMessageDialog(null, "Sucessfully updated");
            updateTableData(SQL);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jtbDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbDataMouseClicked
        int selectedRow = jtbData.getSelectedRow();
        if(selectedRow!=-1){
            btnDelete.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnAdd.setEnabled(false);
        }
    }//GEN-LAST:event_jtbDataMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = jtbData.getSelectedRow();
        if(selectedRow!=-1){
            String categoryName = jtbData.getModel().getValueAt(selectedRow, 0).toString();
            int choice = JOptionPane.showConfirmDialog(null, "Are you sure?\nAll the products for this category will be deleted!!", "Warning!!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(choice == JOptionPane.YES_OPTION){

                ProductTable.delete("categoryid", CategoryTable.getCategoryId(DatabaseColumnNameConstants.CATEGORYNAME, categoryName));
                CategoryTable.delete(DatabaseColumnNameConstants.CATEGORYNAME,categoryName);
                updateTableData(SQL);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtCategoryNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCategoryNameKeyReleased
        if(!CategoryTable.checkCategoryExists(txtCategoryName.getText())){
            btnDelete.setEnabled(false);
        }else{
            btnDelete.setEnabled(true);
        }
    }//GEN-LAST:event_txtCategoryNameKeyReleased

    private void txtCategoryNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCategoryNameFocusGained
       btnAdd.setEnabled(true);
    }//GEN-LAST:event_txtCategoryNameFocusGained

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String txt;
        txt = txtCategoryName.getText();
        txt = txt.trim();
        
        if(txt.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter a category");
        }else if(CategoryTable.checkCategoryExists(txt)){
            JOptionPane.showMessageDialog(null, "Category already exists!");
        }
        else{
            CategoryTable.insert(txt, 0, 0);
            updateTableData(SQL);
        }
    }//GEN-LAST:event_btnAddActionPerformed
    public void updateChanges(){
        updateTableData(SQL);
    }
    private void updateTableData(String sql){
        ResultSet rs1;
        rs1 = null;
        try {
            rs1 = DatabaseManagement.select(sql);
            jtbData.setModel(DbUtils.resultSetToTableModel(rs1));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue :  " + e); 
        }finally{
            try {
                rs1.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Problem in closing rs or preparedStatement :  " + e);
            }
        }
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jlblCategoryName;
    private javax.swing.JTable jtbData;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel operationPanel;
    private javax.swing.JTextField txtCategoryName;
    // End of variables declaration//GEN-END:variables
    private static final String SQL = "SELECT categoryname,totalproducts,tvalueproducts FROM category";
    private static ResultSet rs = null;
    private String txt = "";
}

